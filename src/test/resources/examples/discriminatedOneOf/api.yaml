openapi: 3.0.0
info:
paths:
components:
  schemas:
    SomeObj:
      type: object
      required:
        - state
      properties:
        state:
          $ref: '#/components/schemas/State'
        inlinedArray:
          type: array
          items:
            discriminator:
              mapping:
                char_location: "#/components/schemas/OneObject"
                content_block_location: "#/components/schemas/TwoObject"
              propertyName: type
            oneOf:
              - "$ref": "#/components/schemas/OneObject"
              - "$ref": "#/components/schemas/TwoObject"
        inlinedObject:
          type: object
          discriminator:
            mapping:
              char_location: "#/components/schemas/OneObject"
              content_block_location: "#/components/schemas/TwoObject"
            propertyName: type
          oneOf:
            - "$ref": "#/components/schemas/OneObject"
            - "$ref": "#/components/schemas/TwoObject"
    State:
      oneOf:
        - $ref: '#/components/schemas/StateA'
        - $ref: '#/components/schemas/StateB'
      discriminator:
        propertyName: status
        mapping:
          a: '#/components/schemas/StateA'
          b: '#/components/schemas/StateB'
    Status:
      type: string
      enum:
        - a
        - b
    StateA:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/Status'
    StateB:
      type: object
      required:
        - status
        - mode
      properties:
        status:
          $ref: '#/components/schemas/Status'
        mode:
          type: string
          enum:
            - mode1
            - mode2
    OneObject:
      required:
        - type
      properties:
        type:
          type: string
    TwoObject:
      required:
        - type
      properties:
        type:
          type: string